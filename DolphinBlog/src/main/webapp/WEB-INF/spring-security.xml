<?xml version="1.0" encoding="UTF-8"?>
<!-- #1 - Make security the default namespace -->
<beans:beans xmlns="http://www.springframework.org/schema/security" 
             xmlns:beans="http://www.springframework.org/schema/beans" 
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
             xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
http://www.springframework.org/schema/security 
http://www.springframework.org/schema/security/spring-security-3.1.xsd">
  
    <beans:bean id="webexpressionHandler" 
                class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>
  
    
    <http pattern="/login" security="none" /> 
   

    <http pattern="/css/**" security="none" />
    <http pattern="/js/**" security="none" />
    <http pattern="/img/**" security="none" />
    
    <http pattern="/fonts/**" security="none" />
  
    
    <http use-expressions="true" auto-config="true" pattern="/" >
        <intercept-url pattern="**" access="true" />
    </http>
    
    <http auto-config="true" use-expressions="false">

        <!-- this is where my login form needs to go, and how/where it happens -->
        <form-login login-processing-url="/j_spring_security_check"
                    login-page="/login"
                    default-target-url="/admin/posts" 
                    authentication-failure-url="/login?login_error=1"/>
        <logout logout-success-url="/home" />
        
      <!--    <http pattern="/fonts/glyphicons-halflings-regular.ttf" security="none" />
    <http pattern="/fonts/glyphicons-halflings-regular.woff" security="none" /> -->
  <intercept-url pattern="/admin/posts" access="ROLE_ADMIN, ROLE_USER" />
  <intercept-url pattern="/HashtagsMain" access="ROLE_ADMIN, ROLE_USER" />
  <intercept-url pattern="/admin/pages" access="ROLE_ADMIN" />
  <intercept-url pattern="/home" access="ROLE_ADMIN, ROLE_USER,ROLE_ANONYMOUS" />
  <intercept-url pattern="/home" access="ROLE_ADMIN, ROLE_USER,ROLE_ANONYMOUS" />
  <intercept-url pattern="/pages/**" access="ROLE_ADMIN, ROLE_USER,ROLE_ANONYMOUS" />
  <intercept-url pattern="/posts/**" access="ROLE_ADMIN, ROLE_USER,ROLE_ANONYMOUS" />
  <intercept-url pattern="/blogpost" access="ROLE_ADMIN, ROLE_USER,ROLE_ANONYMOUS" />
  <intercept-url pattern="/blogposts" access="ROLE_ADMIN, ROLE_USER,ROLE_ANONYMOUS" />
  <intercept-url pattern="/search" access="ROLE_ADMIN, ROLE_USER,ROLE_ANONYMOUS" />
   <intercept-url pattern="/home/**" access="ROLE_ADMIN, ROLE_USER,ROLE_ANONYMOUS" />
   <intercept-url pattern="//**" access="ROLE_ADMIN, ROLE_USER,ROLE_ANONYMOUS" />

 
       
        <intercept-url pattern="/**" access="ROLE_ADMIN, ROLE_USER,ROLE_ANONYMOUS" />
      
      
   
       


        
     
        
        

 
       
       
        
    </http>
    <!-- #4 - Authentication Manager config --> 
    <authentication-manager>
        <!-- #4a - Authentication Provider - we’re using the JDBC service -->
        <authentication-provider>
            <!--<password-encoder ref="encoder"/>-->
            <!-- #4b - Tells Spring Security where to look for user information -->
            <!--       We use the dataSource defined in spring-persistence.xml  -->
            <!--       and we give Spring Security the query to use to lookup   -->
            <!--       the user’s credentials (get the password from the users  -->
            <!-- tables and get the roles from the authorities table) --> 
            <!--            <jdbc-user-service id="userService"
            data-source-ref="dataSource"
            users-by-username-query="SELECT username, password, enabled FROM users WHERE username=?"
            authorities-by-username-query="SELECT username, authority FROM authorities WHERE username=?" />-->
            <jdbc-user-service   id="userService"
                                 data-source-ref="dataSourceBean"
                                 users-by-username-query="SELECT username, password, enabled FROM users WHERE username=?"
                                 authorities-by-username-query="SELECT username, authority FROM authorities WHERE username=?" />
        </authentication-provider>
    </authentication-manager>
</beans:beans>